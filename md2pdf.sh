#!/bin/sh

VERSION=0.0.1
TAGNAME=

# @getoptions
parser_definition() {
  setup  REST help:usage -- 'Usage: md2pdf [options] [infile]' ''
  msg -- 'Options:'
  param   TITLE   -t --title   -- 'title'
  param   LANG    -l --lang    -- 'language spec'
  param   COLOR   -c --color   -- 'color spec'
  disp    VERSION -v --version -- 'show version'
  disp    :usage  -h --help    -- 'display help for command'
}
# @end

# @gengetoptions parser -i parser_definition parse
# Generated by getoptions (BEGIN)
# URL: https://github.com/ko1nksm/getoptions (v3.3.0)
TITLE=''
LANG=''
COLOR=''
REST=''
parse() {
  OPTIND=$(($#+1))
  while OPTARG= && [ $# -gt 0 ]; do
    case $1 in
      --?*=*) OPTARG=$1; shift
        eval 'set -- "${OPTARG%%\=*}" "${OPTARG#*\=}"' ${1+'"$@"'}
        ;;
      --no-*|--without-*) unset OPTARG ;;
      -[tlc]?*) OPTARG=$1; shift
        eval 'set -- "${OPTARG%"${OPTARG#??}"}" "${OPTARG#??}"' ${1+'"$@"'}
        ;;
      -[vh]?*) OPTARG=$1; shift
        eval 'set -- "${OPTARG%"${OPTARG#??}"}" -"${OPTARG#??}"' ${1+'"$@"'}
        OPTARG= ;;
    esac
    case $1 in
      '-t'|'--title')
        [ $# -le 1 ] && set "required" "$1" && break
        OPTARG=$2
        TITLE="$OPTARG"
        shift ;;
      '-l'|'--lang')
        [ $# -le 1 ] && set "required" "$1" && break
        OPTARG=$2
        LANG="$OPTARG"
        shift ;;
      '-c'|'--color')
        [ $# -le 1 ] && set "required" "$1" && break
        OPTARG=$2
        COLOR="$OPTARG"
        shift ;;
      '-v'|'--version')
        echo "${VERSION}"
        exit 0 ;;
      '-h'|'--help')
        usage
        exit 0 ;;
      --)
        shift
        while [ $# -gt 0 ]; do
          REST="${REST} \"\${$(($OPTIND-$#))}\""
          shift
        done
        break ;;
      [-]?*) set "unknown" "$1"; break ;;
      *)
        REST="${REST} \"\${$(($OPTIND-$#))}\""
    esac
    shift
  done
  [ $# -eq 0 ] && { OPTIND=1; unset OPTARG; return 0; }
  case $1 in
    unknown) set "Unrecognized option: $2" "$@" ;;
    noarg) set "Does not allow an argument: $2" "$@" ;;
    required) set "Requires an argument: $2" "$@" ;;
    pattern:*) set "Does not match the pattern (${1#*:}): $2" "$@" ;;
    notcmd) set "Not a command: $2" "$@" ;;
    *) set "Validation error ($1): $2" "$@"
  esac
  echo "$1" >&2
  exit 1
}
usage() {
cat<<'GETOPTIONSHERE'
Usage: md2pdf [options] [infile]

Options:
  -t, --title TITLE           title
  -l, --lang LANG             language spec
  -c, --color COLOR           color spec
  -v, --version               show version
  -h, --help                  display help for command
GETOPTIONSHERE
}
# Generated by getoptions (END)
# @end

parse "$@"
eval "set -- $REST"

if [ $# -gt 1 ]; then
  echo >&2 'Error: too many input files'
  exit 1
elif [ $# -eq 1 -a "$1" = '-' -o $# -eq 0 ]; then
  DIRNAME=$PWD
  INFILE=
else
  DIRNAME=$(cd `dirname "$1"` 2>/dev/null; echo $PWD)
  INFILE=$(basename "$1")
fi

OPTS=(${TITLE:+-t "$TITLE"} ${LANG:+-l "$LANG"} ${COLOR:+-c "$COLOR"})
OPTS+=(-b /opt/app/mnt)

MOUNT=(-v "$DIRNAME:/opt/app/mnt")
IMAGE="md2pdf${TAGNAME:+:$TAGNAME}"

docker run --rm -i "${MOUNT[@]}" "$IMAGE" node md2pdf.js "${OPTS[@]}" "$INFILE"
